// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20220917132908_mig5")]
    partial class mig5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Concrete.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ChangedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 9, 17, 16, 29, 8, 470, DateTimeKind.Local).AddTicks(5030));

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Core.Entities.Concrete.GroupClaim", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ChangedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 9, 17, 16, 29, 8, 470, DateTimeKind.Local).AddTicks(3393));

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.HasKey("GroupId", "ClaimId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.ToTable("GroupClaims");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ChangedById")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 9, 17, 16, 29, 8, 470, DateTimeKind.Local).AddTicks(5786));

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Code = "tr-TR",
                            Name = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Code = "en-US",
                            Name = "English"
                        });
                });

            modelBuilder.Entity("Core.Entities.Concrete.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<string>("Level")
                        .HasColumnType("text");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Core.Entities.Concrete.MobileLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ChangedById")
                        .HasColumnType("uuid");

                    b.Property<int>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 9, 17, 16, 29, 8, 470, DateTimeKind.Local).AddTicks(6790));

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<string>("ExternalUserId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("IsSend")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<int>("Provider")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ExternalUserId", "Provider");

                    b.ToTable("MobileLogins");
                });

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ChangedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 9, 17, 16, 29, 8, 470, DateTimeKind.Local).AddTicks(7407));

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.ToTable("OperationClaims");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Translate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ChangedById")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 9, 17, 16, 29, 8, 470, DateTimeKind.Local).AddTicks(8389));

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LangId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.ToTable("Translates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95182d4f-602c-4c21-ba97-99569e9df769"),
                            Code = "Login",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Giriş"
                        },
                        new
                        {
                            Id = new Guid("bb5839ae-1842-403d-9610-294d5cf1b977"),
                            Code = "Email",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "E posta"
                        },
                        new
                        {
                            Id = new Guid("ba3e41bb-c8d2-4d3d-ab58-e817c78efb00"),
                            Code = "Password",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Parola"
                        },
                        new
                        {
                            Id = new Guid("4e2ad1d5-9ba2-40f9-9df5-4d793bee2769"),
                            Code = "Update",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Güncelle"
                        },
                        new
                        {
                            Id = new Guid("c2a907b5-3d3c-4db8-918a-25c1f8d58f9c"),
                            Code = "Delete",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Sil"
                        },
                        new
                        {
                            Id = new Guid("c763e34e-af05-4873-a498-4cf7ea49be9e"),
                            Code = "UsersGroups",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kullanıcının Grupları"
                        },
                        new
                        {
                            Id = new Guid("e242f465-afb3-4ddc-b66f-621c9e1e1c28"),
                            Code = "UsersClaims",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kullanıcının Yetkileri"
                        },
                        new
                        {
                            Id = new Guid("5e34c907-c3c3-4dfe-ab79-5dda65c398ee"),
                            Code = "Create",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Yeni"
                        },
                        new
                        {
                            Id = new Guid("979548d8-294b-4bc9-95f6-b06722a4c0ea"),
                            Code = "Users",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kullanıcılar"
                        },
                        new
                        {
                            Id = new Guid("65cf8455-3181-43bb-82ab-5b5e06f68325"),
                            Code = "Groups",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Gruplar"
                        },
                        new
                        {
                            Id = new Guid("99761575-78ef-4c8d-813c-363005496031"),
                            Code = "Login",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Login"
                        },
                        new
                        {
                            Id = new Guid("b92a212b-6a2e-43a8-b993-87f3992d9918"),
                            Code = "Email",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Email"
                        },
                        new
                        {
                            Id = new Guid("105c248c-8b72-4869-a2b5-db42ce4062ee"),
                            Code = "Password",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Password"
                        },
                        new
                        {
                            Id = new Guid("52706703-0359-4abd-a368-bc0cf2f8d26d"),
                            Code = "Update",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Update"
                        },
                        new
                        {
                            Id = new Guid("d671c02b-e8a9-4863-835d-3c2f4dfba8e9"),
                            Code = "Delete",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Delete"
                        },
                        new
                        {
                            Id = new Guid("51923bb2-eb38-4fc1-b5e2-2e31e089919a"),
                            Code = "UsersGroups",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "User's Groups"
                        },
                        new
                        {
                            Id = new Guid("6a161498-39f5-4c7e-9716-c31896c3aabf"),
                            Code = "UsersClaims",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "User's Claims"
                        },
                        new
                        {
                            Id = new Guid("436ca114-f0f2-4430-8b5e-e5606afa87a7"),
                            Code = "Create",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Create"
                        },
                        new
                        {
                            Id = new Guid("cd9c6df2-a6d1-4094-be07-1331a903fb79"),
                            Code = "Users",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Users"
                        },
                        new
                        {
                            Id = new Guid("73677ab1-8bd1-4528-aed6-11a9567a2750"),
                            Code = "Groups",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Groups"
                        },
                        new
                        {
                            Id = new Guid("e6844747-1501-4c32-a28d-ef7fe567b35b"),
                            Code = "OperationClaim",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Operasyon Yetkileri"
                        },
                        new
                        {
                            Id = new Guid("6fd4a892-947e-4bb7-a12a-6f94d752627d"),
                            Code = "OperationClaim",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Operation Claim"
                        },
                        new
                        {
                            Id = new Guid("38b84d2e-af2d-4591-be54-d89f9dea9952"),
                            Code = "Languages",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Diller"
                        },
                        new
                        {
                            Id = new Guid("f355f3e9-19a4-421e-ba87-dc565bd06170"),
                            Code = "Languages",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Languages"
                        },
                        new
                        {
                            Id = new Guid("5195bb25-ceff-46b7-b495-7d146ed5bc18"),
                            Code = "TranslateWords",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Dil Çevirileri"
                        },
                        new
                        {
                            Id = new Guid("7a8187af-c468-4a81-ad87-eea9c4ab304a"),
                            Code = "TranslateWords",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Translate Words"
                        },
                        new
                        {
                            Id = new Guid("fbb1d28c-9672-46f6-8e59-19bc72611d4c"),
                            Code = "Management",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Yönetim"
                        },
                        new
                        {
                            Id = new Guid("ec0d7ea4-8972-444c-afd5-47ca4a730372"),
                            Code = "Management",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Management"
                        },
                        new
                        {
                            Id = new Guid("9c7e82ad-9e8a-4a2e-80ce-0ef7710ecf46"),
                            Code = "AppMenu",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Uygulama"
                        },
                        new
                        {
                            Id = new Guid("1aad2e1b-6b98-42bb-9440-43095fdc4825"),
                            Code = "AppMenu",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Application"
                        },
                        new
                        {
                            Id = new Guid("66c1f596-c96d-4d08-abd8-b8ec5d9f7359"),
                            Code = "Added",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Başarıyla Eklendi."
                        },
                        new
                        {
                            Id = new Guid("eaf348e3-34ec-469b-8b36-d804f42e9cf1"),
                            Code = "Added",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Successfully Added."
                        },
                        new
                        {
                            Id = new Guid("025340c6-57c2-4a25-b5ba-56048c673727"),
                            Code = "Updated",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Başarıyla Güncellendi."
                        },
                        new
                        {
                            Id = new Guid("3dae52f9-2a53-4761-9d2c-516b44dfffba"),
                            Code = "Updated",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Successfully Updated."
                        },
                        new
                        {
                            Id = new Guid("ad6dc560-451b-43ba-bd63-277386239aae"),
                            Code = "Deleted",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Başarıyla Silindi."
                        },
                        new
                        {
                            Id = new Guid("749a7219-3d8b-4d24-9ad4-6ff57eda67a5"),
                            Code = "Deleted",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Successfully Deleted."
                        },
                        new
                        {
                            Id = new Guid("a8a96e60-ddc3-485e-9415-fc4019caa17d"),
                            Code = "OperationClaimExists",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Bu operasyon izni zaten mevcut."
                        },
                        new
                        {
                            Id = new Guid("24cf8451-ac95-42d5-9725-b0d9e53aa80c"),
                            Code = "OperationClaimExists",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "This operation permit already exists."
                        },
                        new
                        {
                            Id = new Guid("ef5bce3b-2aa0-499e-a83a-6c0ff275eb2c"),
                            Code = "StringLengthMustBeGreaterThanThree",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Lütfen En Az 3 Karakterden Oluşan Bir İfade Girin."
                        },
                        new
                        {
                            Id = new Guid("031b838a-ee12-4a25-8221-63e6574ae994"),
                            Code = "StringLengthMustBeGreaterThanThree",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Please Enter A Phrase Of At Least 3 Characters."
                        },
                        new
                        {
                            Id = new Guid("ecfc01a4-8e81-4bb7-be43-c9efecb75c0f"),
                            Code = "CouldNotBeVerifyCid",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kimlik No Doğrulanamadı."
                        },
                        new
                        {
                            Id = new Guid("c73ec3de-34ef-4af6-b8ff-58b8301f59c1"),
                            Code = "CouldNotBeVerifyCid",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Could not be verify Citizen Id"
                        },
                        new
                        {
                            Id = new Guid("f2c98d60-d082-40c9-b033-acf0304644ca"),
                            Code = "VerifyCid",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kimlik No Doğrulandı."
                        },
                        new
                        {
                            Id = new Guid("36d2bb6e-44cc-44de-97ca-dc3f8661091b"),
                            Code = "VerifyCid",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Verify Citizen Id"
                        },
                        new
                        {
                            Id = new Guid("01ad5028-2572-4e2b-b279-f5876a78e32c"),
                            Code = "AuthorizationsDenied",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Yetkiniz olmayan bir alana girmeye çalıştığınız tespit edildi."
                        },
                        new
                        {
                            Id = new Guid("6ff8dc64-a7d0-4762-bf9b-92678a623338"),
                            Code = "AuthorizationsDenied",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "It has been detected that you are trying to enter an area that you do not have authorization."
                        },
                        new
                        {
                            Id = new Guid("29e5bfe9-ef63-4108-ae52-b73aab43dccd"),
                            Code = "UserNotFound",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kimlik Bilgileri Doğrulanamadı. Lütfen Yeni Kayıt Ekranını kullanın."
                        },
                        new
                        {
                            Id = new Guid("4f7ae65e-66fe-4a5e-b2bc-d6807bea0160"),
                            Code = "UserNotFound",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Credentials Could Not Verify. Please use the New Registration Screen."
                        },
                        new
                        {
                            Id = new Guid("6eb36ac9-d0ea-4cc5-a6dd-a6f4ec1533a2"),
                            Code = "PasswordError",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kimlik Bilgileri Doğrulanamadı, Kullanıcı adı ve/veya parola hatalı."
                        },
                        new
                        {
                            Id = new Guid("95feaba9-1971-4f59-b1f2-bedbf04c6a8b"),
                            Code = "PasswordError",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Credentials Failed to Authenticate, Username and / or password incorrect."
                        },
                        new
                        {
                            Id = new Guid("8f55f4c4-5178-4589-9ab8-f77a868dbc04"),
                            Code = "SuccessfulLogin",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Sisteme giriş başarılı."
                        },
                        new
                        {
                            Id = new Guid("7e0a4a47-1aea-4d29-85ac-230050333957"),
                            Code = "SuccessfulLogin",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Login to the system is successful."
                        },
                        new
                        {
                            Id = new Guid("0dcfdc22-b5e5-429d-8de6-617b7830a277"),
                            Code = "SendMobileCode",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Lütfen Size SMS Olarak Gönderilen Kodu Girin!"
                        },
                        new
                        {
                            Id = new Guid("03bf1769-5f67-4a16-b4c8-77ff4251ea9a"),
                            Code = "SendMobileCode",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Please Enter The Code Sent To You By SMS!"
                        },
                        new
                        {
                            Id = new Guid("62675537-9c04-4901-8bda-347e89eb34ba"),
                            Code = "NameAlreadyExist",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Oluşturmaya Çalıştığınız Nesne Zaten Var."
                        },
                        new
                        {
                            Id = new Guid("65736f5b-0378-4be5-be37-87d966d534b7"),
                            Code = "NameAlreadyExist",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "The Object You Are Trying To Create Already Exists."
                        },
                        new
                        {
                            Id = new Guid("05ee1bf2-2342-48ea-8bdc-36df2ac56f77"),
                            Code = "WrongCID",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Vatandaşlık No Sistemimizde Bulunamadı. Lütfen Yeni Kayıt Oluşturun!"
                        },
                        new
                        {
                            Id = new Guid("e3c3064a-8736-4acd-8b6e-41871c7e59b1"),
                            Code = "WrongCID",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Citizenship Number Not Found In Our System. Please Create New Registration!"
                        },
                        new
                        {
                            Id = new Guid("5c43273a-b9c0-4427-8334-d4663b4d6714"),
                            Code = "CID",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Vatandaşlık No"
                        },
                        new
                        {
                            Id = new Guid("02c8d7ad-9dca-4aef-842c-aef67391f25e"),
                            Code = "CID",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Citizenship Number"
                        },
                        new
                        {
                            Id = new Guid("fab96010-c98c-475a-912e-2aa09fe96118"),
                            Code = "PasswordEmpty",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Parola boş olamaz!"
                        },
                        new
                        {
                            Id = new Guid("03a68caf-a62d-4945-a54c-75747c458ed7"),
                            Code = "PasswordEmpty",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Password can not be empty!"
                        },
                        new
                        {
                            Id = new Guid("a1a83d01-83c4-4c14-867e-57ffe281dc3e"),
                            Code = "PasswordLength",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Minimum 8 Karakter Uzunluğunda Olmalıdır!"
                        },
                        new
                        {
                            Id = new Guid("fc99313f-4762-4b6b-965f-89b3c169ebc4"),
                            Code = "PasswordLength",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Must be at least 8 characters long! "
                        },
                        new
                        {
                            Id = new Guid("bfa167f8-d408-453f-9b04-9ceb2b7f0246"),
                            Code = "PasswordUppercaseLetter",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "En Az 1 Büyük Harf İçermelidir!"
                        },
                        new
                        {
                            Id = new Guid("50a14e42-6b5b-4aa7-823c-cc72da1ab9b5"),
                            Code = "PasswordUppercaseLetter",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Must Contain At Least 1 Capital Letter!"
                        },
                        new
                        {
                            Id = new Guid("a058eeca-efc6-47de-af48-cc8d4ff6c718"),
                            Code = "PasswordLowercaseLetter",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "En Az 1 Küçük Harf İçermelidir!"
                        },
                        new
                        {
                            Id = new Guid("f311730f-b530-47b7-8808-0c6a1efb6bd5"),
                            Code = "PasswordLowercaseLetter",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Must Contain At Least 1 Lowercase Letter!"
                        },
                        new
                        {
                            Id = new Guid("96e7ed42-4522-44f5-9ea7-ef74c923df9b"),
                            Code = "PasswordDigit",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "En Az 1 Rakam İçermelidir!"
                        },
                        new
                        {
                            Id = new Guid("da6e1bfb-0977-442a-b8a0-0ffc76859648"),
                            Code = "PasswordDigit",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "It Must Contain At Least 1 Digit!"
                        },
                        new
                        {
                            Id = new Guid("e250ac95-786f-4c17-9cd2-7bf92649b91d"),
                            Code = "PasswordSpecialCharacter",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "En Az 1 Simge İçermelidir!"
                        },
                        new
                        {
                            Id = new Guid("6a525c7c-671b-4cad-9e9c-e80a1a7401c0"),
                            Code = "PasswordSpecialCharacter",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Must Contain At Least 1 Symbol!"
                        },
                        new
                        {
                            Id = new Guid("58f1c7ec-e5bd-44e2-9d4c-efc446392afa"),
                            Code = "SendPassword",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Yeni Parolanız E-Posta Adresinize Gönderildi."
                        },
                        new
                        {
                            Id = new Guid("f63ec4a7-c643-4f02-9c56-88e5c033284a"),
                            Code = "SendPassword",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Your new password has been sent to your e-mail address."
                        },
                        new
                        {
                            Id = new Guid("5dababda-5244-4efd-a69a-abc781476613"),
                            Code = "InvalidCode",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Geçersiz Bir Kod Girdiniz!"
                        },
                        new
                        {
                            Id = new Guid("929707d6-9541-4218-bcab-5628a7827441"),
                            Code = "InvalidCode",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "You Entered An Invalid Code!"
                        },
                        new
                        {
                            Id = new Guid("5ab3ee59-fbc3-4d4e-83d3-fdc2071f5383"),
                            Code = "SmsServiceNotFound",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "SMS Servisine Ulaşılamıyor."
                        },
                        new
                        {
                            Id = new Guid("ab99a081-3515-4085-aff4-bddff2b7d2ef"),
                            Code = "SmsServiceNotFound",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Unable to Reach SMS Service."
                        },
                        new
                        {
                            Id = new Guid("dd416331-3e10-4f97-a93a-173d3ca0be0d"),
                            Code = "TrueButCellPhone",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Bilgiler doğru. Cep telefonu gerekiyor."
                        },
                        new
                        {
                            Id = new Guid("112dd912-ab67-433f-9e96-c10a97107bbe"),
                            Code = "TrueButCellPhone",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "The information is correct. Cell phone is required."
                        },
                        new
                        {
                            Id = new Guid("e4732b0f-c92b-4e4c-9bb7-6b0cd5fddab7"),
                            Code = "TokenProviderException",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Token Provider boş olamaz!"
                        },
                        new
                        {
                            Id = new Guid("6d3e8286-5fa2-48af-b9af-20fc0819ac0f"),
                            Code = "TokenProviderException",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Token Provider cannot be empty!"
                        },
                        new
                        {
                            Id = new Guid("f010c381-2ad0-4ce1-8b11-bdd7e113bfa1"),
                            Code = "Unknown",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Bilinmiyor!"
                        },
                        new
                        {
                            Id = new Guid("28ed6892-0568-4681-a488-363fb36190fe"),
                            Code = "Unknown",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Unknown!"
                        },
                        new
                        {
                            Id = new Guid("d3a8bc1e-1c94-4683-98b4-6f6f8b6dd665"),
                            Code = "NewPassword",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Yeni Parola:"
                        },
                        new
                        {
                            Id = new Guid("6c3346b5-7855-4c92-92f3-a610d76c287e"),
                            Code = "NewPassword",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "New Password:"
                        },
                        new
                        {
                            Id = new Guid("359cd498-a3ab-4882-956e-9ab5e587a08a"),
                            Code = "ChangePassword",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Parola Değiştir"
                        },
                        new
                        {
                            Id = new Guid("4aff797c-eef3-4e75-b1b5-2b28803c42f1"),
                            Code = "ChangePassword",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Change Password"
                        },
                        new
                        {
                            Id = new Guid("e655c701-f834-478c-9ef3-7bbb35bb9063"),
                            Code = "Save",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kaydet"
                        },
                        new
                        {
                            Id = new Guid("9b65e1c9-849f-421c-b4eb-344a1b7e162c"),
                            Code = "Save",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Save"
                        },
                        new
                        {
                            Id = new Guid("b1cf58c4-fb6c-4b59-b088-29c7c47efd60"),
                            Code = "GroupName",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Grup Adı"
                        },
                        new
                        {
                            Id = new Guid("eb8b3a0b-64db-48cd-9ff5-3ec52829f30f"),
                            Code = "GroupName",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Group Name"
                        },
                        new
                        {
                            Id = new Guid("183cddb5-1ba7-4ac5-a4f2-4d1fbe2535f6"),
                            Code = "FullName",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Tam Adı"
                        },
                        new
                        {
                            Id = new Guid("b14ead32-2f58-4ce5-b99a-bba283fce9db"),
                            Code = "FullName",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Full Name"
                        },
                        new
                        {
                            Id = new Guid("af431c8b-f639-4837-a180-08bbe63eaac1"),
                            Code = "Address",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Adres"
                        },
                        new
                        {
                            Id = new Guid("25f60e8b-bca5-4181-a22d-962edbad4a0b"),
                            Code = "Address",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Address"
                        },
                        new
                        {
                            Id = new Guid("ab9cf431-d64e-426f-8467-4ec5a2ef960b"),
                            Code = "Notes",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Notlar"
                        },
                        new
                        {
                            Id = new Guid("5436878a-6df9-495e-8419-94c07c27397f"),
                            Code = "Notes",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Notes"
                        },
                        new
                        {
                            Id = new Guid("55f181f9-2694-41e8-be23-cababe351ec4"),
                            Code = "ConfirmPassword",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Parolayı Doğrula"
                        },
                        new
                        {
                            Id = new Guid("ff00562b-c25f-44ce-9128-2d2a48b87abf"),
                            Code = "ConfirmPassword",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Confirm Password"
                        },
                        new
                        {
                            Id = new Guid("f4e91339-71d6-4fe0-9a83-320920fd815b"),
                            Code = "Code",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kod"
                        },
                        new
                        {
                            Id = new Guid("fc425c57-49f7-495f-8048-d06ce94c0847"),
                            Code = "Code",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Code"
                        },
                        new
                        {
                            Id = new Guid("38baef77-4d72-4829-9a13-e222d25d6bc0"),
                            Code = "Alias",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Görünen Ad"
                        },
                        new
                        {
                            Id = new Guid("ad6d3c31-e606-4cae-8bed-caa817eac454"),
                            Code = "Alias",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Alias"
                        },
                        new
                        {
                            Id = new Guid("93176ebf-c1cf-4fa4-aeeb-9d540da8c132"),
                            Code = "Description",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Açıklama"
                        },
                        new
                        {
                            Id = new Guid("75337d5b-4abb-4433-9f46-e146749e8497"),
                            Code = "Description",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Description"
                        },
                        new
                        {
                            Id = new Guid("6e24bd8e-cd8a-471b-8abc-5b2f7a3d393f"),
                            Code = "Value",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Değer"
                        },
                        new
                        {
                            Id = new Guid("6bc94fed-05c7-421e-aa8d-0681388392c1"),
                            Code = "Value",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Value"
                        },
                        new
                        {
                            Id = new Guid("179079b4-a238-4b67-a09b-2ab15ea865e8"),
                            Code = "LangCode",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Dil Kodu"
                        },
                        new
                        {
                            Id = new Guid("5e99ac4e-117b-41a6-be28-688c40e9c298"),
                            Code = "LangCode",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Lang Code"
                        },
                        new
                        {
                            Id = new Guid("46f6863e-a46f-4157-a9eb-fa001a7ef570"),
                            Code = "Name",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Adı"
                        },
                        new
                        {
                            Id = new Guid("b910e866-66c9-42ff-9fa1-88dc833ffa39"),
                            Code = "Name",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Name"
                        },
                        new
                        {
                            Id = new Guid("aa720b5a-3638-40ce-843a-d5204e9d595f"),
                            Code = "MobilePhones",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Cep Telefonu"
                        },
                        new
                        {
                            Id = new Guid("d7653777-52cc-445c-9f1f-998b375b930b"),
                            Code = "MobilePhones",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Mobile Phone"
                        },
                        new
                        {
                            Id = new Guid("4a99746b-9080-4454-a465-38b07c17bfe6"),
                            Code = "NoRecordsFound",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kayıt Bulunamadı"
                        },
                        new
                        {
                            Id = new Guid("b1156835-f782-4e38-a55d-b01ebb6d48bf"),
                            Code = "NoRecordsFound",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "No Records Found"
                        },
                        new
                        {
                            Id = new Guid("836a5d61-59a0-40f4-8f13-bf8ddca7a36a"),
                            Code = "Required",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Bu alan zorunludur!"
                        },
                        new
                        {
                            Id = new Guid("058909b0-fea2-41dc-a29c-a7543cfe115c"),
                            Code = "Required",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "This field is required!"
                        },
                        new
                        {
                            Id = new Guid("41cf931d-2c4a-4ecf-9943-f8e6a74ea159"),
                            Code = "Permissions",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Permissions"
                        },
                        new
                        {
                            Id = new Guid("968f5bb6-9e8b-4469-bf77-6c07986fbc97"),
                            Code = "Permissions",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "İzinler"
                        },
                        new
                        {
                            Id = new Guid("b5574132-ef93-4a86-8a14-45c15282d95b"),
                            Code = "GroupList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Grup Listesi"
                        },
                        new
                        {
                            Id = new Guid("ab250938-b321-4dc6-879d-52b512f7cd01"),
                            Code = "GroupList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Group List"
                        },
                        new
                        {
                            Id = new Guid("2d47a601-a2c5-4191-9d41-b5ce6480a57f"),
                            Code = "GrupPermissions",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Grup Yetkileri"
                        },
                        new
                        {
                            Id = new Guid("1a9c58a1-4d0f-4ce6-a648-30338a1300be"),
                            Code = "GrupPermissions",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Grup Permissions"
                        },
                        new
                        {
                            Id = new Guid("2ee8dfad-f47c-436e-9549-2dffa891736f"),
                            Code = "Add",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Ekle"
                        },
                        new
                        {
                            Id = new Guid("d8d34fc4-07e8-4a83-9343-297894f9190e"),
                            Code = "Add",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Add"
                        },
                        new
                        {
                            Id = new Guid("ab6630e8-9139-4dbe-b5fa-9938f45c7efb"),
                            Code = "UserList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Kullanıcı Listesi"
                        },
                        new
                        {
                            Id = new Guid("f02eb26c-f35f-4f1a-a3f0-a7afd180de08"),
                            Code = "UserList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "User List"
                        },
                        new
                        {
                            Id = new Guid("d2405333-264b-4edc-8ab2-8f3d80f04cbb"),
                            Code = "OperationClaimList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Yetki Listesi"
                        },
                        new
                        {
                            Id = new Guid("f9b96034-0b5d-4fe1-a202-3852d3215e60"),
                            Code = "OperationClaimList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "OperationClaim List"
                        },
                        new
                        {
                            Id = new Guid("31659afe-ad5f-42a3-87eb-bbafe6add7f2"),
                            Code = "LanguageList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Dil Listesi"
                        },
                        new
                        {
                            Id = new Guid("9c248340-160f-4b92-aacc-e1a04a5f051f"),
                            Code = "LanguageList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Language List"
                        },
                        new
                        {
                            Id = new Guid("3bab3f08-b6a2-422d-acd3-401c6d2e932c"),
                            Code = "TranslateList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Dil Çeviri Listesi"
                        },
                        new
                        {
                            Id = new Guid("eb0c6188-631e-44be-a60c-3676742b93cd"),
                            Code = "TranslateList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Translate List"
                        },
                        new
                        {
                            Id = new Guid("7bc1078c-6f41-4bfd-9225-594abbe37f6c"),
                            Code = "LogList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "İşlem Kütüğü"
                        },
                        new
                        {
                            Id = new Guid("04316bc7-3677-4b71-a514-e3a44a4536a9"),
                            Code = "LogList",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "LogList"
                        },
                        new
                        {
                            Id = new Guid("e32098c5-40b9-41a8-8b16-9953680bd7ae"),
                            Code = "DeleteConfirm",
                            LangId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Value = "Emin misiniz?"
                        },
                        new
                        {
                            Id = new Guid("d4dd9126-8e14-4b57-bd7a-f98cf8df97f0"),
                            Code = "DeleteConfirm",
                            LangId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Value = "Are you sure?"
                        });
                });

            modelBuilder.Entity("Core.Entities.Concrete.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ChangedById")
                        .HasColumnType("uuid");

                    b.Property<long>("CitizenId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 9, 17, 16, 29, 8, 471, DateTimeKind.Local).AddTicks(993));

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CitizenId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PhoneNumber");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ChangedById")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 9, 17, 16, 29, 8, 471, DateTimeKind.Local).AddTicks(437));

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ChangedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 9, 17, 16, 29, 8, 471, DateTimeKind.Local).AddTicks(9771));

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("Entities.Concrete.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ChangedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("Pid")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Group", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Core.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("ChangedBy");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Core.Entities.Concrete.GroupClaim", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Core.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("ChangedBy");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Language", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Core.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("ChangedBy");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Core.Entities.Concrete.MobileLogin", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Core.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("ChangedBy");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Core.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("ChangedBy");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Translate", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Core.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("ChangedBy");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Core.Entities.Concrete.User", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Core.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("ChangedBy");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserClaim", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Core.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("ChangedBy");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserGroup", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Core.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("ChangedBy");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Entities.Concrete.Location", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Core.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("ChangedBy");

                    b.Navigation("CreatedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
